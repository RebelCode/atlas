<?php

namespace RebelCode\Atlas;

use RebelCode\Atlas\Expression\ExprInterface;
use RebelCode\Atlas\Expression\FnExpr;
use RebelCode\Atlas\Expression\Term;

/**
 * Helper class for easily creating unary expressions for SQL functions.
 *
 * STRING SQL FUNCTIONS
 * @method static FnExpr ASCII()
 * @method static FnExpr CHAR_LENGTH()
 * @method static FnExpr CHARACTER_LENGTH()
 * @method static FnExpr CONCAT()
 * @method static FnExpr CONCAT_WS()
 * @method static FnExpr FIELD()
 * @method static FnExpr FIND_IN_SET()
 * @method static FnExpr FORMAT()
 * @method static FnExpr INSERT()
 * @method static FnExpr INSTR()
 * @method static FnExpr LCASE()
 * @method static FnExpr LEFT()
 * @method static FnExpr LENGTH()
 * @method static FnExpr LOCATE()
 * @method static FnExpr LOWER()
 * @method static FnExpr LPAD()
 * @method static FnExpr LTRIM()
 * @method static FnExpr MAKE_SET()
 * @method static FnExpr MID()
 * @method static FnExpr OCT()
 * @method static FnExpr OCTET_LENGTH()
 * @method static FnExpr ORD()
 * @method static FnExpr POSITION()
 * @method static FnExpr QUOTE()
 * @method static FnExpr REPEAT()
 * @method static FnExpr REPLACE()
 * @method static FnExpr REVERSE()
 * @method static FnExpr RIGHT()
 * @method static FnExpr RPAD()
 * @method static FnExpr RTRIM()
 * @method static FnExpr SOUNDEX()
 * @method static FnExpr SPACE()
 * @method static FnExpr STRCMP()
 * @method static FnExpr SUBSTRING()
 * @method static FnExpr SUBSTRING_INDEX()
 * @method static FnExpr TRIM()
 * @method static FnExpr UCASE()
 * @method static FnExpr UPPER()
 *
 * INTEGER SQL FUNCTIONS
 * @method static FnExpr ABS()
 * @method static FnExpr ACOS()
 * @method static FnExpr ASIN()
 * @method static FnExpr ATAN()
 * @method static FnExpr ATAN2()
 * @method static FnExpr CEIL()
 * @method static FnExpr CEILING()
 * @method static FnExpr COS()
 * @method static FnExpr COT()
 * @method static FnExpr CRC32()
 * @method static FnExpr COUNT()
 * @method static FnExpr DEGREES()
 * @method static FnExpr DIV()
 * @method static FnExpr EXP()
 * @method static FnExpr FLOOR()
 * @method static FnExpr GREATEST()
 * @method static FnExpr LEAST()
 * @method static FnExpr LN()
 * @method static FnExpr LOG()
 * @method static FnExpr LOG10()
 * @method static FnExpr LOG2()
 * @method static FnExpr MAX()
 * @method static FnExpr MIN()
 * @method static FnExpr MOD()
 * @method static FnExpr PI()
 * @method static FnExpr POW()
 * @method static FnExpr POWER()
 * @method static FnExpr RADIANS()
 * @method static FnExpr RAND()
 * @method static FnExpr ROUND()
 * @method static FnExpr SIGN()
 * @method static FnExpr SIN()
 * @method static FnExpr SQRT()
 * @method static FnExpr SUM()
 * @method static FnExpr TAN()
 * @method static FnExpr TRUNCATE()
 *
 * DATE SQL FUNCTIONS
 * @method static FnExpr ADDDATE()
 * @method static FnExpr ADDTIME()
 * @method static FnExpr CONVERT_TZ()
 * @method static FnExpr CURDATE()
 * @method static FnExpr CURRENT_DATE()
 * @method static FnExpr CURRENT_TIME()
 * @method static FnExpr CURRENT_TIMESTAMP()
 * @method static FnExpr CURTIME()
 * @method static FnExpr DATE()
 * @method static FnExpr DATEDIFF()
 * @method static FnExpr DATE_ADD()
 * @method static FnExpr DATE_FORMAT()
 * @method static FnExpr DATE_SUB()
 * @method static FnExpr DAY()
 * @method static FnExpr DAYNAME()
 * @method static FnExpr DAYOFMONTH()
 * @method static FnExpr DAYOFWEEK()
 * @method static FnExpr DAYOFYEAR()
 * @method static FnExpr EXTRACT()
 * @method static FnExpr FROM_DAYS()
 * @method static FnExpr FROM_UNIXTIME()
 * @method static FnExpr GET_FORMAT()
 * @method static FnExpr HOUR()
 * @method static FnExpr LAST_DAY()
 * @method static FnExpr LOCALTIME()
 * @method static FnExpr LOCALTIMESTAMP()
 * @method static FnExpr MAKEDATE()
 * @method static FnExpr MAKETIME()
 * @method static FnExpr MICROSECOND()
 * @method static FnExpr MINUTE()
 * @method static FnExpr MONTH()
 * @method static FnExpr MONTHNAME()
 * @method static FnExpr NOW()
 * @method static FnExpr PERIOD_ADD()
 * @method static FnExpr PERIOD_DIFF()
 * @method static FnExpr QUARTER()
 * @method static FnExpr SEC_TO_TIME()
 * @method static FnExpr SECOND()
 * @method static FnExpr STR_TO_DATE()
 * @method static FnExpr SUBDATE()
 * @method static FnExpr SUBTIME()
 * @method static FnExpr SYSDATE()
 * @method static FnExpr TIME()
 * @method static FnExpr TIME_FORMAT()
 * @method static FnExpr TIME_TO_SED()
 * @method static FnExpr TIMEDIFF()
 * @method static FnExpr TIMESTAMP()
 * @method static FnExpr TO_DAYS()
 * @method static FnExpr UNIX_TIMESTAMP()
 * @method static FnExpr UTC_DATE()
 * @method static FnExpr UTC_TIME()
 * @method static FnExpr UTC_TIMESTAMP()
 * @method static FnExpr WEEK()
 * @method static FnExpr WEEKDAY()
 * @method static FnExpr WEEKOFYEAR()
 * @method static FnExpr YEAR()
 * @method static FnExpr YEARWEEK()
 *
 * OTHER SQL FUNCTIONS
 * @method static FnExpr BENCHMARK()
 * @method static FnExpr BIN()
 * @method static FnExpr BINARY()
 * @method static FnExpr CASE()
 * @method static FnExpr CAST()
 * @method static FnExpr COALESCE()
 * @method static FnExpr CONNECTION_ID()
 * @method static FnExpr CONV()
 * @method static FnExpr CONVERT()
 * @method static FnExpr CURRENT_USER()
 * @method static FnExpr DATABASE()
 * @method static FnExpr FOUND_ROWS()
 * @method static FnExpr GROUP_CONCAT()
 * @method static FnExpr IF()
 * @method static FnExpr IFNULL()
 * @method static FnExpr LAST_INSERT_ID()
 * @method static FnExpr NULLIF()
 * @method static FnExpr SESSION_USER()
 * @method static FnExpr SYSTEM_USER()
 * @method static FnExpr USER()
 * @method static FnExpr VERSION()
 */
abstract class F
{
    /**
     * Creates a function expression.
     *
     * @param string $operator The called method name, which corresponds to the operator (a.k.a. function name).
     * @param list<mixed|ExprInterface> $arguments The call arguments.
     * @return FnExpr The created function expression.
     */
    public static function __callStatic(string $operator, array $arguments): FnExpr
    {
        return new FnExpr($operator, array_map([Term::class, 'create'], $arguments));
    }
}
